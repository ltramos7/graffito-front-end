{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/mod_5_project/front-end/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport About from './components/About';\nimport MuralContainer from './containers/MuralContainer';\nimport Mural from './components/Mural';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport Profile from './components/Profile';\nimport Navigation from '/components/Navigtaion'; //flesh out the Home component (done)\n//flesh out the Mural component (done)\n//flesh out the NavBar component (done)\n//import them here\n//arrange the return to include the <Router> and <Route (with the junk inside here)>\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleLoginSubmit = (user_name, password, loggedIn, history) => {\n      const reqObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_name: user_name,\n          password: password,\n          loggedIn: loggedIn\n        })\n      };\n      fetch(\"http://localhost:3000/login\", reqObj).then(resp => resp.json()).then(data => {\n        if (data.error) {\n          alert(data.error);\n        } else {\n          this.setState({\n            user: data\n          });\n          localStorage.setItem('token', data.token);\n          history.push(`/profile/${this.state.user.id}`); // history.push(`/`)\n        }\n      });\n    };\n\n    this.updateUser = user => {\n      this.setState({\n        user: user\n      });\n    };\n\n    this.handleClick = muralObj => {\n      return this.setState({\n        mural: muralObj\n      });\n    };\n\n    this.handleLogout = () => {\n      localStorage.removeItem(\"token\");\n      this.setState({\n        user: null\n      });\n    };\n\n    this.addFavorite = (user, muralObj) => {\n      const reqObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user,\n          mural: muralObj\n        })\n      };\n      fetch('http://localhost:3000/favorites', reqObj).then(resp => resp.json()).then(data => console.log(data)); // eventually, instead of console.log(), there will be a function there showInFavorites() that will concat or use spread to add the new favorite object to the existing list. \n    };\n\n    this.state = {\n      mural: null,\n      user: null,\n      isLoading: true,\n      loggedIn: false\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.token;\n\n    if (token) {\n      fetch(\"http://localhost:3000/current_user\", {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(resp => resp.json()).then(data => this.setState({\n        user: data,\n        isLoading: false\n      }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, this.state.user ? /*#__PURE__*/React.createElement(Navbar, {\n      user: this.state.user,\n      handleLogout: this.handleLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 30\n      }\n    }) : /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 99\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/murals\",\n      render: props => /*#__PURE__*/React.createElement(MuralContainer, Object.assign({}, props, {\n        handleClick: this.handleClick,\n        addFavorite: this.addFavorite,\n        mural: this.state.mural,\n        user: this.state.user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 59\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/murals/:id\",\n      render: props => /*#__PURE__*/React.createElement(Mural, Object.assign({}, props, {\n        mural: this.state.mural,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 63\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: props => /*#__PURE__*/React.createElement(Signup, Object.assign({}, props, {\n        updateUser: this.updateUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 58\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n        handleLoginSubmit: this.handleLoginSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 57\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }), this.state.isLoading ? null : /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/profile/:id\",\n      render: props => /*#__PURE__*/React.createElement(Profile, Object.assign({}, props, {\n        user: this.state.user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 95\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 42\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/flatironschool/mod_5_project/front-end/src/App.js"],"names":["React","Component","BrowserRouter","Route","Jumbotron","Navbar","Home","About","MuralContainer","Mural","Signup","Login","Profile","Navigation","App","constructor","handleLoginSubmit","user_name","password","loggedIn","history","reqObj","method","headers","body","JSON","stringify","fetch","then","resp","json","data","error","alert","setState","user","localStorage","setItem","token","push","state","id","updateUser","handleClick","muralObj","mural","handleLogout","removeItem","addFavorite","console","log","isLoading","componentDidMount","Accept","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport About from './components/About'\nimport MuralContainer from './containers/MuralContainer';\nimport Mural from './components/Mural'\nimport Signup from './components/Signup'\nimport Login from './components/Login'\nimport Profile from './components/Profile'\nimport Navigation from '/components/Navigtaion'\n\n\n//flesh out the Home component (done)\n//flesh out the Mural component (done)\n//flesh out the NavBar component (done)\n//import them here\n//arrange the return to include the <Router> and <Route (with the junk inside here)>\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      mural: null,\n      user: null,\n      isLoading: true,\n      loggedIn: false\n    }\n  }\n\n  componentDidMount() {\n    const token = localStorage.token\n\n    if (token) {\n      fetch(\"http://localhost:3000/current_user\", {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      })\n        .then(resp => resp.json())\n        .then(data => this.setState({\n          user: data,\n          isLoading: false\n        }))\n    }\n\n  }\n\n  handleLoginSubmit = (user_name, password, loggedIn, history) => {\n    const reqObj = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_name: user_name,\n        password: password,\n        loggedIn: loggedIn\n      })\n    }\n\n    fetch(\"http://localhost:3000/login\", reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.error) {\n          alert(data.error)\n        } else {\n          this.setState({\n            user: data\n          })\n          localStorage.setItem('token', data.token)\n          history.push(`/profile/${this.state.user.id}`)\n          // history.push(`/`)\n        }\n\n      })\n  }\n\n  updateUser = (user) => {\n    this.setState({\n      user: user\n    })\n  }\n\n  handleClick = (muralObj) => {\n    return (this.setState({\n      mural: muralObj\n    }))\n  }\n\n  handleLogout = () => {\n    localStorage.removeItem(\"token\")\n    this.setState({\n      user: null\n    })\n\n  }\n\n  addFavorite = (user, muralObj) => {\n\n    const reqObj = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user: user,\n        mural: muralObj\n      })\n    }\n\n    fetch('http://localhost:3000/favorites', reqObj)\n      .then(resp => resp.json())\n      .then(data => console.log(data))\n\n    // eventually, instead of console.log(), there will be a function there showInFavorites() that will concat or use spread to add the new favorite object to the existing list. \n  }\n\n  render() {\n\n    return (\n\n      <BrowserRouter>\n        <div>\n\n          {/* <Jumbotron>\n          {this.state.user ? <Navbar user={this.state.user} handleLogout={this.handleLogout} /> : <Navbar />}\n          </Jumbotron> */}\n\n          {this.state.user ? <Navbar user={this.state.user} handleLogout={this.handleLogout} /> : <Navbar />}\n\n\n          <Route exact path='/' component={Home} />\n\n          <Route exact path='/murals' render={(props) => (<MuralContainer {...props} handleClick={this.handleClick} addFavorite={this.addFavorite} mural={this.state.mural} user={this.state.user} />)} />\n          <Route exact path='/murals/:id' render={(props) => (<Mural {...props} mural={this.state.mural} />)} />\n          <Route exact path='/signup' render={(props => (<Signup {...props} updateUser={this.updateUser} />))} />\n          <Route exact path='/login' render={(props) => <Login {...props} handleLoginSubmit={this.handleLoginSubmit} />} />\n          <Route exact path='/about' component={About} />\n          {this.state.isLoading ? null : <Route exact path='/profile/:id' render={(props) => (<Profile {...props} user={this.state.user} />)} />}\n\n\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}